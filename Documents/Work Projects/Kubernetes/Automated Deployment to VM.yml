name: Automated Deployment to VM

# Trigger this pipeline on every push to the main branch
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    # Tell GitHub to run this job on your VM
    runs-on: self-hosted

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 3. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          # Assumes Dockerfile is in the root of the repo
          context: .
          push: true
          # Tags the image with the unique Git commit SHA
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

      - name: 4. Deploy to Kubernetes
        run: |
          echo "Preparing deployment..."
          # Set up kubectl credentials from the secret
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ./kubeconfig
          export KUBECONFIG=./kubeconfig

          echo "Manipulating deployment file..."
          # This is where you can manipulate files.
          # Here, we replace the image tag in deployment.yaml.
          sed -i 's|image:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}|g' deployment.yaml

          echo "Applying configuration to Kubernetes..."
          # Apply the modified deployment file and the service
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

          echo "Deployment complete!"