name: Automated Deployment of Multiple Apps

# Trigger this pipeline on every push to the main branch
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    # The job name now includes the app name from the matrix
    name: Build & Deploy ${{ matrix.app }}
    runs-on: self-hosted

    strategy:
      # Define a matrix to run this job for each application
      matrix:
        app: [app-one, app-two, app-three]

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 3. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          # Assumes each app has its own Dockerfile in its own directory
          context: ./${{ matrix.app }}
          push: true
          # Tags the image with the app name and commit SHA
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ github.sha }}

      - name: 4. Deploy to Kubernetes
        run: |
          echo "Preparing deployment for ${{ matrix.app }}..."
          # Set up kubectl credentials from the secret
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ./kubeconfig
          export KUBECONFIG=./kubeconfig

          echo "Applying service configuration..."
          # Assumes each app has its own service.yaml file
          kubectl apply -f ./${{ matrix.app }}/service.yaml

          echo "Updating deployment with the new image..."
          # This command dynamically updates the correct deployment and container
          # Assumes deployment is named 'app-name-deployment'
          # Assumes container is named 'app-name-container'
          kubectl set image deployment/${{ matrix.app }}-deployment ${{ matrix.app }}-container=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ github.sha }}

          echo "Deployment complete for ${{ matrix.app }}!"
